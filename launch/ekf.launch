<launch>
  <!-- EKF Localization Node -->
  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization" clear_params="true" output="screen">
    <!-- Load parameters from YAML config file -->
    <rosparam command="load" file="$(find nix_ros_ardrone)/config/ekf_ardrone.yaml"/>
    
    <!-- Remap topics if needed (example) -->
    <!-- <remap from="odometry/filtered" to="odom/filtered"/> -->
    <!-- <remap from="imu/data" to="ardrone/imu"/> -->
  </node>
  <node pkg="nix_ros_ardrone" type="altitude_to_pose.py" name="ardrone_altitude_to_pose" output="screen" />
  <node name="orb_slam2_mono" pkg="orb_slam2_ros"
      type="orb_slam2_ros_mono" output="screen">

      <remap from="/camera/image_raw" to="/ardrone/front/image_raw" />

       <param name="publish_pointcloud" type="bool" value="true" />
       <param name="publish_pose" type="bool" value="true" />
       <param name="localize_only" type="bool" value="true" />
       <param name="reset_map" type="bool" value="false" />

       <!-- static parameters -->
       <param name="load_map" type="bool" value="true" />
       <param name="map_file" type="string" value="/home/scott/GIT/nix-ros-ardrone/mono_map.bin" />
       <param name="voc_file" type="string" value="$(find nix_ros_ardrone)/config/ORBvoc.txt" />

       <param name="pointcloud_frame_id" type="string" value="map" />
       <param name="camera_frame_id" type="string" value="camera_link" />
       <param name="min_num_kf_in_map" type="int" value="5" />

       <!-- ORB parameters -->
       <param name="/ORBextractor/nFeatures" type="int" value="2000" />
       <param name="/ORBextractor/scaleFactor" type="double" value="1.2" />
       <param name="/ORBextractor/nLevels" type="int" value="8" />
       <param name="/ORBextractor/iniThFAST" type="int" value="20" />
       <param name="/ORBextractor/minThFAST" type="int" value="7" />

       <!-- Camera parameters -->
       <!-- Camera frames per second -->
       <param name="camera_fps" type="int" value="30" />
       <!-- Color order of the images (0: BGR, 1: RGB. It is ignored if images are grayscale) -->
       <param name="camera_rgb_encoding" type="bool" value="true" />

        <!-- Camera calibration parameters -->
        <!--If the node should wait for a camera_info topic to take the camera calibration data-->
       <param name="load_calibration_from_cam" type="bool" value="false" />
       <!-- Camera calibration and distortion parameters (OpenCV) -->
      <param name="camera_fx" type="double" value="550.48107" />
      <param name="camera_fy" type="double" value="545.95539" />
      <param name="camera_cx" type="double" value="342.44206" />
      <param name="camera_cy" type="double" value="169.56079" />
       <!-- Camera calibration and distortion parameters (OpenCV) -->
      <param name="camera_k1" type="double" value="-0.501971" />
      <param name="camera_k2" type="double" value="0.236450" />
      <param name="camera_p1" type="double" value="0.003130" />
      <param name="camera_p2" type="double" value="-0.007885" />
      <param name="camera_k3" type="double" value="0.0" />
  </node>
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find nix_ros_ardrone)/config/rviz_config.rviz" output="screen" />
  <node pkg="tf" type="static_transform_publisher" name="camera_link_broadcaster"
          args="0 0 0 0 0 0 1 base_link camera_link " />
</launch>
